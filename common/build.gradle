plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}
android {
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

android {
    namespace 'com.enovira.common'
    compileSdk 34

    defaultConfig {
        minSdk 24
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding.enabled = true
    dataBinding.enabled = true
}

dependencies {

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //防止倒灌LiveData
//    implementation 'com.kunminx.arch:unpeek-livedata:7.2.0-beta1'
    
    //Gson
    implementation 'com.google.code.gson:gson:2.10.1'
}

task makeJar(type: Copy) {
    // 删除已存在的
    delete('build/libs/mylib.jar')
    // 设置拷贝的文件
    from('build/intermediates/aar_main_jar/release/')
    //打进jar包后的文件目录
    into('build/libs/')
    //将commonlib.jar放入build/libs目录下
    //include, exclude参数来设置过滤
    //(我们只关心commonlib.jar这个文件)
    include('classes.jar')
    //重命名
    rename('classes.jar', 'mylib.jar')
}

makeJar.dependsOn(build)